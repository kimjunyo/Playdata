  Collection Framework(데이터 수집틀): ArrayList.class
  * Java Collection의 종류: List 계열/ Map 계열 /Set 계열
  List 계열: index번호가 존재하기 때문에 순서를 갖는다.
  Map 계열: index번호가 없기 때문에 순서가 존재하지 않는다.
  		   키: 데이터
  Set 계열: 데이터만 존재
  
  ArrayList는 배열과 달리 변수의 양이 달라졌을 때 정해진 크기가 없기 때문에 
  따로 코드 수정 필요 없이 ArrayList안에 넣어 버리며 그만임

  ArrayList => java.util 패키지 안에 ArrayList.class로 존재
  현재 패키지에 없는 다른 클래스를 사용할 경우,
  import를 이용하여 내 프로젝트 내부로 읽어들여야(loading) 한다
  
  import: CTRL + SHIFT + O
  
  import 구문 위치: package 아래에 위치
  
  배열(array)
  NewsClass[] news=new NewsClass[26];
  
  <ArrayList 사용방법>
  ArrayList<데이터 타입> 변수명=new ArrayList<데이터 타입>();
  ArrayList<NewsClass> 변수명=new ArrayList<NewsClass>();
  
  ArrayList에 데이터 추가하는 방법
  변수명.add(데이터);
  
  ArrayList 로부터 데이터 추출하는 방법
  변수명.get(index값);
  
  ArrayList 로부터 데이터 삭제하는 방법
  변수명.remove(index값); //삭제하는 데이터를 반환 //삭제하는 대로 배열의 크기가 작아짐
  
  ArrayList 의 모든데이터를 지우는 방법
  변수명.clear();
  
  ArrayList 의 데이터 갯수 확인하는 방법
  변수명.size();
  *참고 Jaa 1.8버전은 size() 와 length() 두 가지..
  
  ArrayList 는 특정 데이터타입을 지정하지 않으면,
  추가되는 데이터들을 Object로 감싸서 추가한다!!
  따라서 다양한 데이터타입 들을 포함할 수도 있다!!
  
  ArrayList는 주로 객체를 저장할 때 사용!!
  
  set method는 해당 index값에 객체 바꿔치기
  
  CTRL+H(메모장) 내용 바꾸기 / CTRL+F(이클립스) 내용 바꾸기
  
  숙제: ArrayList 다 바꿔보기
  =========================================================
  외부 접근을 제한하는 방법
  선언부에 public 대신 private을 사용!!
  이와 같은 키워드를 접근제한자라고 부른다~
  
  접근제한자의 종류
  1. public: 언제 어디서든지.
  2. protected: 상속까지만 허용
  3. default: 아무것도 없을 경우 (동일 패키지 내에서만 접근 가능) ex)int url; 이 상태가 default
  4. private: 해당 클래스 내에서만 접근 가능
  
  접근제한자 사용 위치
  1. 클래스 선언 시, (단, private은 불가능) 
  2. 생성자 선언 시, 
  3. 메서드선언 시,
  4. 변수 선언 시,
  
  접근제한자 중, private은 정보에 대한 은닉성을 주입하기 위해 사용!!
  
  생성자 private을 사용하는 경우: 디자인패턴 싱글톤 패턴을 구현할 때 사용!!
  
  디자인패턴: 기존 개발자들이 코딩할 때, 최적화 될 수 있도록 명시해 놓은 코딩 구조..
  
  변수에 private을 선언하는 경우,
  외부에서 해당 변수의 값을 함부로 변경 못하도록 은닉 시킬 때 사용..
  예) 주민번호와 같은 데이터를 저장 받는 변수~~
  